on:
  push:
    branches:
      - master
  workflow_dispatch:

name: "Release"

jobs:

  release-please:
    runs-on: ubuntu-latest
    outputs:

      # ck3oop-core-js
      ck3oop-core-js--release-id: ${{ steps.release_please.outputs['ck3oop-core-js--id'] }}
      ck3oop-core-js--tag_name: ${{ steps.release_please.outputs['ck3oop-core-js--tag_name'] }}
      ck3oop-core-js--release_created: ${{ steps.release_please.outputs['ck3oop-core-js--release_created'] }}

      # ck3oop-ui-js
      ck3oop-ui-js--release_id: ${{ steps.release_please.outputs['ck3oop-ui-js--id'] }}
      ck3oop-ui-js--tag_name: ${{ steps.release_please.outputs['ck3oop-ui-js--tag_name'] }}
      ck3oop-ui-js--release_created: ${{ steps.release_please.outputs['ck3oop-ui-js--release_created'] }}

      # ck3oop-core-rs
      ck3oop-core-rs--release_id: ${{ steps.release_please.outputs['ck3oop-core-rs--id'] }}
      ck3oop-core-rs--tag_name: ${{ steps.release_please.outputs['ck3oop-core-rs--tag_name'] }}
      ck3oop-core-rs--release_created: ${{ steps.release_please.outputs['ck3oop-core-rs--release_created'] }}

      # ck3oop-ui-rs
      ck3oop-ui-rs--release_id: ${{ steps.release_please.outputs['ck3oop-ui-rs--id'] }}
      ck3oop-ui-rs--tag_name: ${{ steps.release_please.outputs['ck3oop-ui-rs--tag_name'] }}
      ck3oop-ui-rs--release_created: ${{ steps.release_please.outputs['ck3oop-ui-rs--release_created'] }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      #todo needs this PR to work correctly with multiple workspace plugins
      #todo https://github.com/googleapis/release-please/pull/2314
      - uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4
        id: release_please
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: '.github/release-please-config.json'
          manifest-file: '.github/.release-please-manifest.json'

      - run: |
          echo '${{ toJSON(steps.release_please.outputs) }}'

  publish-core-rs:
    needs: [ release-please ]
    if: ${{ needs.release-please.outputs['ck3oop-core-rs--release_created'] }}
    uses: "./.github/workflows/rust-publish-crate.yaml"
    with:
      package: 'ck3oop-core-rs'
      tag: ${{ needs.release-please.outputs['ck3oop-core-rs--tag_name'] }}
    secrets:
      RUST_CRATES_TOKEN: ${{ secrets.RUST_CRATES_TOKEN }}

  publish-tauri:
    needs: [ release-please ]
    if: ${{ needs.release-please.outputs['ck3oop-ui-js--release_created'] ||
      needs.release-please.outputs['ck3oop-ui-rs--release_created'] }}
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          #          - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #            args: '--target aarch64-apple-darwin'
          #          - platform: 'macos-latest' # for Intel based macs.
          #            args: '--target x86_64-apple-darwin'
          #          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #            args: ''
          - platform: 'windows-latest'
            args: ''

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: setup node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        working-directory: ck3oop-ui
        run: npm install

      - uses: tauri-apps/tauri-action@b1dc93b31afa36b1247a7a5f55c2dffbdc70dd05 # v0.5.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ck3oop-ui
          includeDebug: true
          tagName: ${{ needs.release-please.outputs['ck3oop-ui--tag_name'] }}
          releaseId: ${{ needs.release-please.outputs['ck3oop-ui--release_id'] }}
          tauriScript: npm run tauri
          args: ${{ matrix.args }}
